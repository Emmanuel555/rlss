{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "simulationresult.json",
  "title": "Simulation Result",
  "descripton": "Contains simulation result in an incremental way",
  "type": "object",
  "properties": {
    "robot_count": {
      "type": "integer",
      "description": "robots have integers ids in [0,robot_count)",
      "minimum": 1
    },
    "robot_shapes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "robot_id": {
            "type": "integer",
            "description": "robot id"
          },
          "shape": {
            "oneOf": [
              {
                "$ref": "#/definitions/aabb"
              },
              {
                "$ref": "#/definitions/sphere"
              }
            ]
          }
        }
      }
    },
    "original_trajectories": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "robot_id": {
            "type": "integer",
            "minimum": 0
          },
          "trajectory": {
            "$ref": "#/definitions/piecewise_curve"
          }
        },
        "required": ["robot_id", "trajectory"]
      },
      "minItems": 1
    },
    "frame_dt": {
      "type": "number",
      "description": "time between consecutive frames"
    },
    "frames": {
      "type": "array",
      "description": "it can be assumed that frames are sorted by their 'step' properties. However, some frames at some steps may not exist. This happens when there is nothing to update in that timestep",
      "items": {
        "$ref": "#/definitions/frame"
      },
      "minItems": 1
    }
  },
  "required": ["robot_count", "robot_shapes", "original_trajectories", "frame_dt", "frames"],

  "definitions": {
    "curve": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "a 3D curve",
      "type": "object",
      "properties": {
        "max_parameter": {
          "type": "number",
          "description": "maximum parameter Mp for the curve. curve f(t) is defined for f in [mp, Mp]"
        },
        "type": {
          "type": "string",
          "enum": ["bezier"],
          "description": "type of the curve (power, bspline, bezier)"
        },
        "controlpoints": {
          "type": "array",
          "description": "control points themselves",
          "items": {
            "$ref": "#/definitions/vector",
            "description": "a single control point"
          },
          "minItems": 1
        }
      },
      "required": ["max_parameter", "type", "controlpoints"]
    },
    "piecewise_curve": {
      "type": "array",
      "items": [
        {
          "$ref": "#/definitons/curve"
        }
      ]
    },
    "vector": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "vector.json",
      "title": "a 3D vector",
      "type": "array",
      "items": [
        {
          "type": "number"
        },
        {
          "type": "number"
        },
        {
          "type": "number"
        }
      ],
      "additionalItems": false
    },
    "hyperplane": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "hyperplane.json",
      "title": "a 3D hyperplane",
      "type": "object",
      "properties": {
        "normal": {
          "$ref": "#/definitions/vector"
        },
        "offset": {
          "type": "number",
          "description": "distance along the normal (d)"
        }
      },
      "required": ["normal", "distance"]
    },
    "aabb": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "aabb_shape.json",
      "title": "axis aligned bounding box",
      "type": "object",
      "properties": {
        "min": {
          "$ref": "#/definitions/vector"
        },
        "max": {
          "$ref": "#/definitions/vector"
        }
      },
      "required": ["min", "max"]
    },
    "sphere": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "aabb_shape.json",
      "title": "sphere",
      "type": "object",
      "properties": {
        "center": {
          "$ref": "#/definitions/vector"
        },
        "radius": {
          "type": "number"
        }
      }
    },
    "frame": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "frame.json",
      "type": "object",
      "properties": {
        "step": {
          "type": "integer",
          "description": "the step count of the frame (frame at t = step * dt), this is like an id that increases by 1 at each step",
          "minimum": 0
        },
        "trajectories" : {
          "type": "array",
          "description": "trajectories of robots. If a trajectory for a robot is given, trajectory of only that robot is replaced",
          "items": {
            "type": "object",
            "properties": {
              "robot_id": {
                "type": "integer",
                "minimum": 0
              },
              "trajectory": {
                "type": {
                  "$ref": "#/definitions/piecewise_curve"
                }
              },
              "discrete_path": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/vector"
                }
              }
            },
            "required": ["robot_id", "trajectory"]
          }
        },
        "obstacles": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/aabb"
              },
              {
                "$ref": "#/definitions/sphere"
              }
            ]
          }
        },
        "robot_positions": {
          "type": "array",
          "description": "if this is set, robots that are in this array are changed. others stay intact.",
          "items": {
            "type": "object",
            "properties": {
              "robot_id": {
                "type": "integer",
                "minimum": 0
              },
              "position": {
                "$ref": "#/definitions/vector"
              }
            },
            "required": ["robot_id", "position"]
          }
        },
        "hyperplanes": {
          "type": "array",
          "descripton": "contains svm hyperplane updates for robots. If an entry for a robot is given, all hyperplanes of that robot are replaced.",
          "items": {
            "type": "object",
            "description": "contains hyperplanes of a specific robot",
            "properties": {
              "robot_id": {
                "type": "integer",
                "minimum": 0
              },
              "hyperplanes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "piece_id": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hyperplane": {
                      "$ref": "#/definitions/hyperplane"
                    }
                  }
                }
              }
            },
            "required": ["robot_id", "hyperplanes"]
          }
        }
      },
      "required": ["step"]
    }
  }
}